# Basic Settjngs
set period 3
set previewer ~/.config/lf/previewer
set cleaner ~/.config/lf/cleaner
set hidden true
set ignorecase true
set icons true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd setwallpaper ${{
    setwallpaper "$f"
}}
# cmd setwallpaper %cp "$f" ~/.config/wall.jpg && xwallpaper --zoom "$f"


# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trashy put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/*) lf -remote "send $id \$nvim \$fx";;
		*) xdg-open "$f"
	esac
}}

# Execute exe
cmd execute ${{
	wine "$f"
}}

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

map <c-f> :fzf_jump

#cmd on-select &{{
#    lf -remote "send $id set statfmt \"$(exa -ld --color=always "$f")\""
#}:a}

# set cmd preview command
# cmd preview kitty + icat --silent --transfer-mode file --place "${w}x${h}@${x}x${y}" "$f"
#cmd preview echo "Previewing: $f" && icat --silent --transfer-mode file --place "${w}x${h}@${x}x${y}" "$f"
# map v preview
# cmd preview = kitty +kitten icat "$f" 
# file_preview = \.(jpg|jpeg|png|gif)$

# Bindings
# Remove some defaults
# map m
# map o
# map n
# map "'"
# map '"'
# map d

map au unarchive
map ae execute

# Map editor to nvim
map e $nvim "$f"

# Bindings
#map c

map cf $dotbare fadd -f

# open using <enter> key to remap <enter> key, need to remove enter key by map open first
map o $terminator -e "nvim $f"

# Basic Functions
map l open 
map Dd ${{
  trash $fx
}}
map u $trashy restore -r 0
map dr $trashy restore
map de $trashy empty --all
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map R reload
map bf mkfile
map bd mkdir
map bg setwallpaper
map C clear

# Movement
map gt cd ~/.local/share/Trash/files
map gd cd ~/.dotfiles/
map gD cd ~/Downloads
map gp cd ~/Pictures
map gc cd ~/.config
map gw cd ~/Works
map gs cd ~/.local/bin

